I"…%<h2 id="Ê°à‰æã‰∏Ä">Ê°à‰æã‰∏Ä</h2>

<blockquote>
  <p>5 ÂàÜÈíüË∞ÉÂ∫¶‰∏ÄÊ¨°</p>
</blockquote>

<p><code class="highlighter-rouge">/app/schedule/cluster.js</code></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="dl">'</span><span class="s1">use strict</span><span class="dl">'</span>

<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">schedule</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">interval</span><span class="p">:</span> <span class="mi">5</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">*</span> <span class="mi">1000</span><span class="p">,</span>
    <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cluster</span><span class="dl">'</span>
  <span class="p">},</span>

  <span class="k">async</span> <span class="nx">task</span><span class="p">(</span><span class="nx">ctx</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// do something...</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><code class="highlighter-rouge">/agent.js</code></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="dl">'</span><span class="s1">use strict</span><span class="dl">'</span>

<span class="kd">const</span> <span class="nx">sleep</span> <span class="o">=</span> <span class="nx">s</span> <span class="o">=&gt;</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">(</span><span class="nx">resolve</span> <span class="o">=&gt;</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">s</span><span class="p">))</span>

<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">agent</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">class</span> <span class="nx">ClusterStrategy</span> <span class="kd">extends</span> <span class="nx">agent</span><span class="p">.</span><span class="nx">ScheduleStrategy</span> <span class="p">{</span>
    <span class="nx">start</span><span class="p">()</span> <span class="p">{</span>
      <span class="k">try</span> <span class="p">{</span>
        <span class="p">;(</span><span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
          <span class="k">while</span> <span class="p">(</span><span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">const</span> <span class="p">{</span> <span class="nx">interval</span> <span class="p">}</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">schedule</span>
            <span class="k">await</span> <span class="nx">sleep</span><span class="p">(</span><span class="nx">interval</span><span class="p">)</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">sendOne</span><span class="p">()</span>
          <span class="p">}</span>
        <span class="p">})()</span>
      <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">ctx</span><span class="p">.</span><span class="nx">logger</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">error</span><span class="p">)</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="nx">agent</span><span class="p">.</span><span class="nx">schedule</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="dl">'</span><span class="s1">cluster</span><span class="dl">'</span><span class="p">,</span> <span class="nx">ClusterStrategy</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="Ê°à‰æã‰∫å">Ê°à‰æã‰∫å</h2>

<blockquote>
  <p>ÊØèÂ§©ÂáåÊô®Ë∞ÉÂ∫¶‰∏ÄÊ¨°</p>
</blockquote>

<p><code class="highlighter-rouge">/app/schedule/cluster.js</code></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="dl">'</span><span class="s1">use strict</span><span class="dl">'</span>

<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">schedule</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">cron</span><span class="p">:</span> <span class="dl">'</span><span class="s1">0 0 0 * * *</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">cluster</span><span class="dl">'</span>
  <span class="p">},</span>

  <span class="k">async</span> <span class="nx">task</span><span class="p">(</span><span class="nx">ctx</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// do something...</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><code class="highlighter-rouge">/agent.js</code></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="dl">'</span><span class="s1">use strict</span><span class="dl">'</span>

<span class="kd">const</span> <span class="nx">parser</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">cron-parser</span><span class="dl">'</span><span class="p">)</span>

<span class="kd">const</span> <span class="nx">sleep</span> <span class="o">=</span> <span class="nx">s</span> <span class="o">=&gt;</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">(</span><span class="nx">resolve</span> <span class="o">=&gt;</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">s</span><span class="p">))</span>

<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">agent</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">class</span> <span class="nx">ClusterStrategy</span> <span class="kd">extends</span> <span class="nx">agent</span><span class="p">.</span><span class="nx">ScheduleStrategy</span> <span class="p">{</span>
    <span class="nx">start</span><span class="p">()</span> <span class="p">{</span>
      <span class="k">try</span> <span class="p">{</span>
        <span class="p">;(</span><span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
          <span class="kd">const</span> <span class="p">{</span> <span class="nx">cron</span> <span class="p">}</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">schedule</span>
          <span class="kd">const</span> <span class="nx">interval</span> <span class="o">=</span> <span class="nx">parser</span><span class="p">.</span><span class="nx">parseExpression</span><span class="p">(</span><span class="nx">cron</span><span class="p">)</span>
          <span class="k">while</span> <span class="p">(</span><span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">const</span> <span class="nx">next</span> <span class="o">=</span> <span class="nx">interval</span><span class="p">.</span><span class="nx">next</span><span class="p">()</span>
            <span class="kd">const</span> <span class="nx">date</span> <span class="o">=</span> <span class="nx">next</span><span class="p">.</span><span class="nx">toString</span><span class="p">()</span>
            <span class="kd">const</span> <span class="nx">timestamp</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">()</span>
            <span class="k">await</span> <span class="nx">sleep</span><span class="p">(</span><span class="nx">timestamp</span> <span class="o">-</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">())</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">sendOne</span><span class="p">()</span>
          <span class="p">}</span>
        <span class="p">})()</span>
      <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">ctx</span><span class="p">.</span><span class="nx">logger</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">error</span><span class="p">)</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="nx">agent</span><span class="p">.</span><span class="nx">schedule</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="dl">'</span><span class="s1">cluster</span><span class="dl">'</span><span class="p">,</span> <span class="nx">ClusterStrategy</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>
:ET