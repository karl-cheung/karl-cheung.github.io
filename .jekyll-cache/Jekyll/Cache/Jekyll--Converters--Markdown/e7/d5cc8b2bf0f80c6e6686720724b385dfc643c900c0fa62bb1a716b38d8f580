I"I<h2 id="配置">配置</h2>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
git config <span class="nt">--global</span> user.name <span class="s1">'name'</span>

git config <span class="nt">--global</span> user.email <span class="s1">'mailbox@*’
</span></code></pre></div></div>

<h2 id="提交">提交</h2>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 初次提交</span>

git init

git add <span class="nb">.</span>

git commit <span class="nt">-m</span> <span class="s1">'commit message'</span>

git remote add origin <span class="k">*</span>@<span class="k">*</span>.git

git push <span class="nt">-u</span> origin master

<span class="c"># 远程分支合并提交</span>

git init

git add <span class="nb">.</span>

git commit <span class="nt">-m</span> <span class="s1">'commit message'</span>

git remote add origin <span class="k">*</span>@<span class="k">*</span>.git

git pull origin master <span class="nt">--allow-unrelated-histories</span>

git push <span class="nt">-u</span> origin master

<span class="c"># 当前分支提交</span>

git init

git add <span class="nb">.</span>

git commit <span class="nt">-m</span> <span class="s1">'commit message'</span>

git push origin &lt;branch&gt;

<span class="c"># 保留当前代码删除所有提交历史</span>

git checkout <span class="nt">--orphan</span> latest_branch

git add <span class="nt">-A</span>

git commit <span class="nt">-am</span> <span class="s1">'commit message'</span>

git branch <span class="nt">-D</span> master

git branch <span class="nt">-m</span> master

git push <span class="nt">-f</span> origin master

<span class="c"># 强制提交</span>

git push origin &lt;branch&gt; <span class="nt">--force</span>
</code></pre></div></div>

<h2 id="remote">remote</h2>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 查看 remote</span>
git remote <span class="nt">-v</span>

<span class="c"># 添加 remote</span>
git remote add &lt;origin&gt; <span class="k">*</span>.git

<span class="c"># 删除 remote</span>
git remote remove &lt;origin&gt;

<span class="c"># 重命名 remote</span>
git remote rename &lt;old-origin&gt; &lt;new-origin&gt;

<span class="c"># 指定 remote 提交</span>
git push &lt;origin&gt;

<span class="c"># 查看其他 remote 提交日志</span>
git ls-remote

<span class="c"># 更改远程仓库（新的 remote）</span>
git remote set-url origin <span class="k">*</span>@<span class="k">*</span>.git

<span class="c"># 推送更改后的远程仓库并设置为默认跟踪分支</span>
git push <span class="nt">-u</span> origin master

<span class="c"># 推送并设置跟踪分支</span>
git push <span class="nt">-u</span> origin &lt;branch&gt;
</code></pre></div></div>

<h2 id="更换远程仓库">更换远程仓库</h2>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 更改远程仓库地址</span>
git remote set-url origin &lt;new-url&gt;

<span class="c"># 获取远程仓库的所有分支</span>
git fetch origin

<span class="c"># 遍历所有本地分支并设置它们以跟踪相应的远程分支</span>
git branch <span class="nt">-r</span> | <span class="nb">grep</span> <span class="nt">-v</span> <span class="s1">'\-&gt;'</span> | <span class="k">while </span><span class="nb">read </span>remote<span class="p">;</span> <span class="k">do </span>git branch <span class="nt">--track</span> <span class="s2">"</span><span class="k">${</span><span class="nv">remote</span><span class="p">#origin/</span><span class="k">}</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$remote</span><span class="s2">"</span><span class="p">;</span> <span class="k">done</span>
</code></pre></div></div>

<h3 id="tag">tag</h3>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 查看本地</span>
git tag

<span class="c"># 查看远程</span>
git ls-remote <span class="nt">--tags</span>

<span class="c"># 新建</span>
git tag &lt;tag&gt;

<span class="c"># 推送远程</span>
git push origin &lt;tag&gt;

<span class="c"># 删除本地</span>
git tag <span class="nt">-d</span> &lt;tag&gt;

<span class="c"># 删除远程</span>
git push origin :refs/tags/&lt;tag&gt;
</code></pre></div></div>

<h3 id="推送-pr">推送 pr</h3>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git remote add upstream https://<span class="k">*</span>@<span class="k">*</span>.git

git remote <span class="nt">-v</span>

git fetch upstream

git merge upstream/&lt;branch&gt;

git push origin &lt;branch&gt;
</code></pre></div></div>

<h2 id="其他">其他</h2>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 保留工作目录中更改回退到上一个提交（HEAD^）</span>
git reset HEAD^

<span class="c"># 丢弃工作目录中更改回退到上一个提交（HEAD^）</span>
git reset <span class="nt">--hard</span> HEAD^

<span class="c"># 丢弃工作目录中更改并将工作目录恢复到指定远程分支的最新状态</span>
git reset <span class="nt">--hard</span> origin/&lt;branch&gt;

<span class="c"># 不变更 commit 历史对某次 commit_id 进行更改</span>
git revert commit_id

<span class="c"># 取消工作区更改</span>
git checkout file

<span class="c"># 取消暂存区更改（add 操作）</span>
git reset HEAD file

<span class="c"># 查看上一次未 push 的 commit</span>
git log &lt;branch&gt; ^origin/&lt;branch&gt;

<span class="c"># 撤销上一次未 push 的 commit</span>
git reset HEAD~1

<span class="c"># 回退到某一次未 push 的 commit</span>
git reset commit_id

<span class="c"># 修正最后一个 commit 消息</span>
git commit <span class="nt">--amend</span> <span class="nt">-m</span> <span class="s1">'commit message'</span>

<span class="c"># 拉取远程分支并新建本地分支</span>
git fetch &lt;branch&gt;:&lt;branch&gt;

<span class="c"># 创建本地分支并切换</span>
git checkout <span class="nt">-b</span> &lt;branch&gt;

<span class="c"># 拉取远程分支并在本地新建后切换到本地分支</span>
git checkout <span class="nt">-b</span> &lt;branch&gt; origin/&lt;branch&gt;

<span class="c"># 删除远程分支文件</span>
git <span class="nb">rm</span> <span class="nt">-rf</span> file

<span class="c"># 删除远程分支文件但本地继续保存</span>
git <span class="nb">rm</span> <span class="nt">--cached</span> file

<span class="c"># 本地分支关联到远程分支</span>
git branch <span class="nt">--set-upstream-to</span><span class="o">=</span>origin/&lt;branch&gt; &lt;branch&gt;

<span class="c"># 重命名本地分支</span>
git branch <span class="nt">-m</span> &lt;oldDranch&gt; &lt;newBranch&gt;

<span class="c"># 删除远程分支</span>
git push origin <span class="nt">-d</span> &lt;branch&gt;

<span class="c"># 多个分支推送</span>
git push <span class="nt">--all</span> origin
</code></pre></div></div>
:ET